@model Order
@using BookStore.Models;
@using System.Globalization;

@{
    ViewBag.Title = "Xem đơn hàng";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
    CultureInfo ci = new CultureInfo("vi-VN");
}

<h3>Xem đơn hàng</h3>
<button class="btn btn-primary"
        onclick="location.href='@Url.Action("ListOrder", "Staff")/'">
    Quay lại Quản lý đơn hàng
</button>

@if(Model.AnonymousUserId != null)
{ 
<button id="customer_info"
        class="btn btn-success"
        onclick="viewCustomer()"
        style="margin-left:1px">
    Xem thông tin khách
</button>
}
<div class="panel panel-default" style="margin-top:5px;margin-bottom:5px">
    <div class="panel-body">
        <div class="row line-data">
            <div class="col-md-2">
                Mã đơn hàng:
            </div>
            <div class="col-md-1">
                <b id="orderId">
                    @Model.ID
                </b>
            </div>
            <div class="col-md-2">
                Trạng thái:
            </div>
            <div class="col-md-3">
                @if (ViewBag.IsAdmin && (Model.AnonymousUserId == null || Model.Status != OrderStatus.New) && Model.Status!= OrderStatus.Canceled)
                { <text>
                <select id="ddl_state" name="ddl_state"
                        class="selectpicker" data-live-search="true"
                        data-width="100%">
                    <option value="1">
                        Đã đóng gói
                    </option>
                    <option value="2">
                        Đang giao
                    </option>
                    <option value="3">
                        Hoàn tất
                    </option>
                    <option value="4">
                        Chờ
                    </option>
                    <option value="5">
                        Huỷ
                    </option>
                </select>
                </text>} else
                {
                    <b id="orderState">
                        @{ 
                            string status = "";
                            switch (Model.Status)
                            {
                                case OrderStatus.New:
                                    status = "Mới";
                                    break;
                                case OrderStatus.Packing:
                                    status = "Đã đóng gói";
                                    break;
                                case OrderStatus.Delivering:
                                    status = "Đang giao hàng";
                                    break;
                                case OrderStatus.Completed:
                                    status = "Hoàn tất";
                                    break;
                                case OrderStatus.Pending:
                                    status = "Đang chờ";
                                    break;
                                case OrderStatus.Canceled:
                                    status = "Đã bị huỷ";
                                    break;
                            }
                        }
                        @status
                    </b>
                            }
            </div>
            <div class="col-md-2">
                Ngày tạo:
            </div>
            <div class="col-md-2" id="orderCreatedDate">
                @Model.CreatedAt.ToString("dd/MM/yyyy")
            </div>
        </div>


        <div class="row line-data" style="margin-top:10px">
            <div class="col-md-2">
                Tổng giá trị đơn hàng:
            </div>
            <div class="col-md-2">
                <b id="orderTotal">
                    @Model.TotalAmount.ToString("#,0", ci) đ
                </b>
            </div>
            <div class="col-md-1">
                @if((Model.Status != OrderStatus.New) && (Model.Status != OrderStatus.Canceled) && (Model.Status != OrderStatus.Completed))
                {
                    using (Html.BeginForm())
                    {
                        string statusNext = "";
                        switch (Model.Status)
                        {
                            case OrderStatus.Packing:
                                statusNext = "Giao hàng";
                                break;
                            case OrderStatus.Delivering:
                                statusNext = "Hoàn tất";
                                break;
                            case OrderStatus.Pending:
                                statusNext = "Đóng gói";
                                break;
                        }
                <input name="Id"
                       class="hidden" type="number"
                       value="@Model.ID"/>
                <input name="stateCurrent"
                       class="hidden" type="number"
                       value="@(((int)Model.Status).ToString())"/>
                <input type="submit" class="btn btn-primary btn-xs"
                       value="@statusNext"/>
                    }
                }                
            </div>
            <div class="col-md-1">
                @if(Model.Status != OrderStatus.New && Model.Status != OrderStatus.Canceled)
                { 
                <button class="btn btn-success btn-xs" onclick="exportPdf()">
                    In
                </button>
                }
            </div>
            <div class="col-md-4" id="error" style="color:blue">
                
            </div>
            <div class="col-md-2">
                @*@if (ViewBag.IsAdmin)
                { <text>
                <button class="btn btn-basic btn-xs" onclick="archiveOrder()">
                    Huỷ đơn hàng này
                </button></text>}*@
            </div>

        </div>
    </div>
</div>


<div class="panel panel-default">
    <div class="panel-heading" style="background-color:rgb(1, 85, 180); color:aliceblue">
        <i class="fa fa-file-text fa-fw"></i> Đơn hàng
    </div>
    <!-- /.panel-heading -->
    <div class="panel-body">
        <div class="table-responsive">
            @* ---- table head ----*@
            <table class="table table-striped table-bordered" style="margin-bottom:0">
                <thead>
                    <tr>
                        <th class="hidden"></th>
                        <th class="col-md-1">
                            STT
                        </th>
                        <th class="col-md-3">
                            Sản phẩm
                        </th>
                        <th class="col-md-1" style="text-align:center">
                            Đơn vị tính
                        </th>
                        <th class="col-md-1" style="text-align:center">
                            Số lượng
                        </th>
                        <th class="col-md-3" style="text-align:end">
                            Đơn giá
                        </th>
                        <th class="col-md-3" style="text-align:end">
                            Thành tiền
                        </th>
                        <th style="width:15px"></th>
                    </tr>
                </thead>
            </table>
            @* ---- table body ----*@
            <div style="height:300px;overflow: hidden; overflow-y:scroll;" id="div_table">
                <table class="table table-striped table-bordered table-hover" id="table_content">
                    <tbody id="list">@Html.Partial("_ListODView", Model.OrderDetails)</tbody>
                </table>
            </div>
            @* bottom line*@

        </div>
        <!-- /.table-responsive -->
    </div>
    <!-- /.panel-body -->
</div>

@if (Model.AnonymousUserId != null)
{
<div class="modal fade" id="modal_cusomter">
    <div class="modal-dialog" role="dialog">
        <div class="modal-content">

            <div class="panel panel-default" style="margin-bottom:0">
                <div class="panel-heading" style="background-color:rgb(1, 180, 85); color:aliceblue">
                    <i class="fa fa-file-text fa-fw"></i> Thông tin khách hàng
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">

                    <table class="table">
                        <tr>
                            <td>Tên</td>
                            <td>
                                <label id="customer_first_name">@Model.AnonymousUser.FirstName</label>
                            </td>
                        </tr>
                        <tr>
                            <td>Họ</td>
                            <td>
                                <label id="customer_last_name">@Model.AnonymousUser.LastName</label>
                            </td>
                        </tr>
                        <tr>
                            <td>Số điện thoại</td>
                            <td>
                                <label id="customer_phone">@Model.AnonymousUser.PhoneNumber</label>
                            </td>
                        </tr>
                        <tr>
                            <td>Email</td>
                            <td>
                                <label id="customer_email">@Model.AnonymousUser.Email</label>
                            </td>
                        </tr>
                        <tr>
                            <td>Địa chỉ</td>
                            <td>
                                <label id="customer_address">@Model.AnonymousUser.Address</label>
                            </td>
                        </tr>
                    </table>

                    <button id="btn_close"
                            class="btn btn-primary pull-right"
                            data-dismiss="modal">Thoát</button>
                </div>
            </div>
        </div>
    </div>
</div>
}
<script src="~/Assets/js/jquery.js"></script>
<script src="~/Assets/js/moment.js"></script>
<script src="~/Scripts/helper.js"></script>
<script>
    // ------------- view -----------------
    $.each($(".line-data"), function (i, item) {
        setChildHeight(item, 34);
    });

    var oldState;
    var customerId;

    // lúc đầu show web
    $(document).ready(function () {

        @if (ViewBag.IsAdmin) {<text>
        $("#ddl_state").val("@(((int)Model.Status).ToString())");
        $("#ddl_state").selectpicker("refresh")
        // cập nhật cái dropdown list ở đầu bảng
        $("#ddl_state").change(function () {
            updateState();
        });
        </text>}
        
        $("#error").html("Hệ thống sẵn sàng");
        $("#error").css({ 'color': 'blue' });

        scrollToBottom();
    })
    

    function scrollToBottom() {
        var scrollBottom = Math.max($('#table_content').height() - $('#div_table').height() + 20, 0);
        //$('#div_table').scrollTop(scrollBottom);

        $("#div_table").animate({ scrollTop: scrollBottom }, 500);
    }

    
    function viewCustomer() {
        $("#modal_cusomter").modal('show');
    }

    @if(ViewBag.IsAdmin)
    {<text>
    function updateState() {

        var newState = $("#ddl_state").val();

        if (newState != oldState && newState == 0) {
            alert('Không thể chuyển đơn hàng về trạng thái Mới');
            $("#ddl_state").val(oldState);
            $("#ddl_state").selectpicker('refresh');
            return;
        }

        $.ajax({
            url: "/Order/UpdateState?orderId=@Model.ID&state=" + newState,
            type: "POST",
            dataType: 'json',
            success: function (data) {
                switch (data.Type) {
                    case 2: {
                        $("#error").html("Cập nhật trạng thái");
                        $("#error").css({ 'color': 'blue' });

                        oldState = $("#ddl_state").val();
                    }
                        break;
                    case 5: {
                        alert("Không tìm thấy đơn hàng này. Bạn vui lòng tải lại trang hoặc về trang danh sách!");
                        $("#error").html("Không tìm thấy đơn hàng này. Bạn vui lòng tải lại trang hoặc về trang danh sách!");
                        $("#error").css({ 'color': 'red' });

                        $("#ddl_state").val(oldState);
                        $("#ddl_state").selectpicker('refresh');
                    }
                        break;
                    case 7: {
                        alert("Bạn không được phép!");
                        $("#error").html("Bạn không được phép!");
                        $("#error").css({ 'color': 'red' });

                        $("#ddl_state").val(oldState);
                        $("#ddl_state").selectpicker('refresh');
                    }
                        break;
                }
            },
            error: function (err) {
                document.write(err.responseText);
            }
        });
    }
    </text>}

    @*// delete the entire order
    function archiveOrder() {
        var confirmDelete = confirm("Bạn có chắc là muốn huỷ?");
        if (confirmDelete) {
            $.ajax({
                url: "/Order/ArchiveOrder/" + "@Model.ID",
                type: "POST",
                dataType: 'json',
                success: function (data) {
                    switch (data.Type) {
                        case 3: {
                            alert("Bạn đã huỷ thành công");

                            // based on login type
                            // for admin
                            window.location.href = "/Staff/ListOrder";
                            // for cashier
                            //location.href("/Staff/Cashier");
                        }
                            break;
                        case 4: {
                            alert("Không hợp lệ");
                        }
                            break;
                    }
                },
                error: function (err) {
                    document.write(err.responseText);
                }
            });
        }
    }*@

    

    // ------------------- checkout -----------------------------
    function exportPdf() {
        var win = window.open('/Order/Export/@Model.ID');
        win.focus();
    }

    @*function checkoutOrder() {
        $.ajax({
            url: "/Order/Checkout/@Model.ID",
            type: "POST",
            dataType: 'json',
            success: function (data) {


                switch (data.Type) {
                    case 0: {
                        $("#error").html("OK");
                        $("#error").css({ 'color': 'blue' });

                        window.location.href = "/Order/ViewOrder/";

                    }
                        break;
                    case 4: {
                        $("#error").html("dữ liệu không hợp lệ");
                        $("#error").css({ 'color': 'red' });
                    }
                        break;
                }


            },
            error: function (err) {
                document.write("Error: " + err.responseText);
            }
        });
    }*@

</script>

<style>
    .form-control:invalid {
        border-color: red;
        outline: 0;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(233, 175, 100, .6);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(233, 175, 100, .6);
    }
</style>
