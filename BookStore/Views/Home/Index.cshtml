@{
    IList<BookStore.Models.Product> Products = ViewData["Products"] as IList<BookStore.Models.Product>;

}
@using System.Globalization;
@{
    ViewBag.Title = "Trang chủ | Nhà sách AC";
    Layout = "~/Views/MyShared/MainLayout.cshtml";
    CultureInfo ci = new CultureInfo("vi-VN");
}

<section id="slider" style="margin-top:100px">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div id="home-carousel" style="position:relative" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        <div class="item active" style="padding-left:0">
                            <img src="~/Assets/images/home/slider1.png" />
                        </div>
                        <div class="item" style="padding-left:0">
                            <img src="~/Assets/images/home/slider2.jpg" />
                        </div>
                        <div class="item" style="padding-left:0">
                            <img src="~/Assets/images/home/slider3.jpg" />
                        </div>
                    </div>
                    <a class="left home-carousel-control" href="#home-carousel" data-slide="prev">
                        <i class="fa fa-angle-left"></i>
                    </a>
                    <a class="right home-carousel-control" href="#home-carousel" data-slide="next">
                        <i class="fa fa-angle-right"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

<section style="margin-top:32px">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 side-menu-holder">
                <div class="left-sidebar side-menu">
                    @Html.Partial("SideMenu")
                </div>
            </div>

            <div id="search_result" class="left-ads-display col-md-9">
                @foreach (var item in Products)
                {
                    <div class="col-md-3 product-men">
                        <div class="product-chr-info chr">
                            <a href="/Products/Single/@item.ID">
                                <div class="thumbnail">
                                    @if (string.IsNullOrEmpty(item.AvatarImage))
                                    {
                                        <img style="height:150px;width:100%;object-fit:contain"
                                             src="/Assets/images/home/default-image.png" />
                                    }
                                    else
                                    {
                                        <img style="height:150px;width:100%;object-fit:contain"
                                             src="@Url.Content(item.AvatarImage)"
                                             onerror="if (this.src != '/Assets/images/home/default-image.png') this.src = '/Assets/images/home/default-image.png';" />
                                    }

                                </div>
                            </a>
                            <hr style="margin:0px;border-color:#DDD" />
                            <a href="/Products/Single/@item.ID">
                                <div class="caption">
                                    <div class="title-caption">
                                        <h4 @*style="text-overflow: ellipsis;white-space:nowrap;overflow:hidden"*@><b>@item.Name</b></h4>
                                        <span class="tooltiptext">@item.Name</span>
                                    </div>

                                    <div class="matrlf-mid">
                                        <ul class="price-list">
                                            <li>
                                                @(item.Price.ToString("0,0.###", ci)) đ
                                            </li>
                                        </ul>

                                        <div class="clearfix"> </div>
                                    </div>
                                    <form action="#" method="post">
                                        <input type="hidden" name="cmd" value="_cart">
                                        <input type="hidden" name="add" value="1">
                                        <input type="hidden" name="chr_item" value="@item.Name">
                                        <input type="hidden" name="amount" value="@item.Price">
                                        <a href="" class="chr-cart" onclick="updateCart('add',@item.ID, event)">
                                            <p hidden>@item.ID</p>
                                            <i class="fa fa-cart-plus" aria-hidden="true"></i>
                                            Thêm vào giỏ
                                        </a>
                                        <a href="#" data-toggle="modal" data-target="#myModal1"></a>
                                    </form>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@*<link href="~/Assets/css/bootstrap.min.css" rel="stylesheet">*@
@*<script src="~/Assets/js/jquery.js" type="text/javascript"></script>
<script src="~/Assets/js/moment.js" type="text/javascript"></script>
<script src="~/Scripts/helper.js" type="text/javascript"></script>*@
@*<script>
    $(document).ready(function () {
        showPopUp();
    })

    // tạo cookie với tên cname, giá trị cvalue, và thời gian hết hạn exdays
    function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires=" + d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    function getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }

    // hiển thị popup với nội dung: đọc alert() bên dưới đê
    function showPopUp() {
        var cookie = getCookie("first_view");
        // nếu không có cookie này => hiển thị popup & tạo cookie
        if (!cookie) {
            alert("Đây là website đồ án môn học. Bạn có thể sử dụng các tính năng của website này, nhưng mọi hàng hoá ở đây chỉ là ảo.\n\nBản quyền thuộc trường Đại học Công nghệ thông tin - Đại học Quốc gia thành phố Hồ Chí Minh.");

            // tạo cookie này với thời gian sống là 1 ngày (mỗi ngày hiện 1 lần)
            setCookie("first_view", 1, 1);
        }
    }

    // nút "Thêm vào giỏ" của các item sản phẩm
    $("#feature-items").on("click", ".add-to-cart", function (event) {
        event.preventDefault();
        var selected_product = $(this).children('p').text();
        updateCart("add", selected_product, event)
    });

    // onSearch được gọi từ searchbox trên header
    function onSearch() {
        if ($("#search_box").val())
            window.location = '/Search/Index?key=' + $("#search_box").val();
        else
            alert('Bạn vui lòng nhập từ khoá để tìm kiếm');
    }
</script>*@
